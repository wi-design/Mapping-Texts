// ajax-loader.scss
//
// Description: 
// Custom ajax loader for visual indication of application state for users
//
// Use:
// Position the html inside any element with a position set to relative.
// Example syntax: <div class=ajax-container><div class=ajax-loading></div></div>
// 
// Sections: (sections are prepended with @ symbol for faster search)
//	-Component container
//	-Interaction cue
// -----------------


// @Component container
// wraps interaction cue
// ---------------------
.ajax-container {
	position: absolute;
	z-index: 1000001;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	
	background-color: rgba(255, 255, 255, 0.7);
	
	&:after {
		content: 'Loading...';
		position: absolute;
		
		top: 0;
		bottom: 0;
		margin-top: auto;
		margin-bottom: auto;
		margin-left: 32px;
		width: 100%;
		height: 20px;
		
		color: $grayDark;
		text-align: center;
	}
	
	// @Interaction cue
	// signals to user that application is still fetching data
	// --------------------------------------------------------
	.ajax-loading { 
		position: absolute;
		
		top: 0;
		right: 0;
		bottom: 0;
		left: -32px;
		margin: auto;
		width: 32px;
		height: 32px;
		border-width: 3px;
		border-style: solid;
		border-color: $primaryThemeColor $secondaryThemeColor $primaryThemeColor $secondaryThemeColor;
		@include border-radius($radius: 32px);
		
		// Need to set intial position for animation
		@include transform( $value: rotate(0deg) );
		
		@include transition( $transition: 0ms );
		
		//animations are set in _animations.scss
		@include animation( $value: infinite-circle 2s linear infinite );
	}
}


// @extra loaders
// ---------------
.map-rendering.ajax-container:after,
.pub-rendering.ajax-container:after {
	margin-left: 0;
}

.map-rendering.ajax-container:after {
	content: 'Map view is rendering';
}

.pub-rendering.ajax-container:after {
	content: 'Pub view is rendering';
}





